<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cfa on James Uanhoro</title>
    <link>https://www.jamesuanhoro.com/tags/cfa/</link>
    <description>Recent content in Cfa on James Uanhoro</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 James Uanhoro</copyright>
    <lastBuildDate>Thu, 16 Nov 2017 10:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/cfa/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A Chi-Square test of close fit in covariance-based SEM</title>
      <link>https://www.jamesuanhoro.com/post/chisq-test-close-fit/</link>
      <pubDate>Thu, 16 Nov 2017 10:00:00 +0000</pubDate>
      
      <guid>https://www.jamesuanhoro.com/post/chisq-test-close-fit/</guid>
      <description>

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;If you can assume close fit for the RMSEA, there is no reason why you cannot for a Chi-Square test in SEMs. The method to do this is relatively simple, and may cause SEM practitioners to reconsider the Chi-Square test.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;When assessing the fit of structural equation models, it is common for applied researchers to dismiss the $\chi^2$ test because it will almost always detect a statistically significant discrepancy between your model and the data, given a large enough sample size. This is because, almost always, our models are approximations of the data. If our model-implied covariance matrix actually matched the sample covariance matrix within sampling variability, the $\chi^2$ test would not be statistically significant regardless of sample size.&lt;/p&gt;

&lt;p&gt;Because of the sensitivity of the $\chi^2$ test to large sample sizes, practitioners often rely on other fit indices like the &lt;code&gt;RMSEA&lt;/code&gt;, &lt;code&gt;CFI&lt;/code&gt;, and &lt;code&gt;TLI&lt;/code&gt; - all of which are based on the $\chi^2$. For the RMSEA, MacCallum, Browne and Sugawara (1996)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; specified values of .05 and .08 as indicating close and mediocre&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; fit respectively. And in lavaan, you automatically get a test of close fit for the RMSEA with confidence intervals and a p-value. This test actually uses the $\chi^2$ distribution, and there is no reason why one cannot perform a $\chi^2$ test of close or mediocre fit depending on one&amp;rsquo;s standards.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The sections that follow may include details that not everyone would like to read about, you can skip to the &lt;a href=&#34;#lavaan&#34;&gt;bottom of the page for annotated lavaan code&lt;/a&gt; for how to compute a $\chi^2$ test of close or mediocre fit.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So the formula for the RMSEA is:&lt;/p&gt;

&lt;p&gt;$\sqrt{\frac{\chi^2-df}{df(N-1)}}$&lt;/p&gt;

&lt;p&gt;where $\chi^2$ is the $\chi^2$ test statistic of your model, $df$ is your model degrees of freedom, and $N$ is sample size.&lt;/p&gt;

&lt;p&gt;If your model fit the data perfectly, the numerator, $\chi^2-df$, is zero; this is the hypothesis the standard $\chi^2$-test tests. And to test this hypothesis, it uses the $\chi^2$-distribution. If we want to perform a test of close fit on the RMSEA, we do not assume a nil null distribution for the $\chi^2$. Instead, we use the non-central $\chi^2$ distribution with a non-centrality parameter that corresponds to an RMSEA of .05. The idea is we accept some level of misspecification, and we use a distribution that corresponds to this level of misspecification. Lavaan reports the result of this test as one of the fit statistics.&lt;/p&gt;

&lt;p&gt;For those who are not familiar with non-central distributions, they are the general family of distributions to which the distributions we are familiar with belong. For example, the $t$-test assumes a nil (zero) null effect so we use the non-central $t$-distribution, with an expected value (and non-centrality parameter) of zero. This distribution is what we call the $t$-distribution. If we want to create confidence intervals without assuming a nil effect, we can actually use a $t$-distribution while specifying its non-centrality parameter $(\lambda)$. It is the distribution when the null of zero is false. The &lt;a href=&#34;https://en.wikipedia.org/wiki/Noncentral_t-distribution&#34; target=&#34;_blank&#34;&gt;Wikipedia introduction to this topic for the $t$-distribution&lt;/a&gt; is decent.&lt;/p&gt;

&lt;p&gt;So how does this help us? The non-centrality parameter $(\lambda)$ for the RMSEA test in lavaan is actually the $\chi^2-df$ value that corresponds to an RMSEA of .05. In math:&lt;/p&gt;

&lt;p&gt;$RMSEA = \sqrt{\frac{\chi^2-df}{df(N-1)}}$&lt;/p&gt;

&lt;p&gt;$RMSEA^2 = \frac{\chi^2-df}{df(N-1)}$&lt;/p&gt;

&lt;p&gt;$RMSEA^2 \times df(N-1) = \chi^2-df$&lt;/p&gt;

&lt;p&gt;Since $\chi^2-df$ is $\lambda$, then:&lt;/p&gt;

&lt;p&gt;$\lambda = RMSEA^2 \times df(N-1)$&lt;/p&gt;

&lt;p&gt;So for a test of close fit, $\lambda$ is:&lt;/p&gt;

&lt;p&gt;$RMSEA^2 \times df(N-1) = .05^2 \times df(N-1) = .0025 \times df(N-1)$&lt;/p&gt;

&lt;p&gt;And for a test of mediocre fit, $\lambda$ is:&lt;/p&gt;

&lt;p&gt;$RMSEA^2 \times df(N-1) = .08^2 \times df(N-1) = .0064 \times df(N-1)$&lt;/p&gt;

&lt;p&gt;Note that lavaan may do things a little differently.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Hence, given a model degrees of freedom, and sample size, we can calculate the non-centrality parameter $(\lambda)$. And given $\lambda$, a $\chi^2$ value and the degrees of freedom for the model, we can calculate the p-value for a test of close or mediocre fit.&lt;/p&gt;

&lt;p&gt;The R syntax for this is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pchisq(Chi-sq-value, degrees-of-freedom, non-centrality-parameter, FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;div id=&#34;lavaan&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;demonstration&#34;&gt;Demonstration&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(lavaan)
data(&amp;quot;HolzingerSwineford1939&amp;quot;)
# model syntax for a bifactor model with the HolzingerSwineford1939 dataset
# eliminating visual factor resolves Heywood case
writeLines(syntax &amp;lt;- paste(
  paste(&amp;quot;g =~&amp;quot;, paste0(&amp;quot;x&amp;quot;, 1:9, collapse = &amp;quot; + &amp;quot;)),
  # paste(&amp;quot;visual =~&amp;quot;, paste0(&amp;quot;x&amp;quot;, 1:3, collapse = &amp;quot; + &amp;quot;)),
  paste(&amp;quot;textual =~&amp;quot;, paste0(&amp;quot;x&amp;quot;, 4:6, collapse = &amp;quot; + &amp;quot;)),
  paste(&amp;quot;speed =~&amp;quot;, paste0(&amp;quot;x&amp;quot;, 7:9, collapse = &amp;quot; + &amp;quot;)),
  sep = &amp;quot;\n&amp;quot;
))

g =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
textual =~ x4 + x5 + x6
speed =~ x7 + x8 + x9

# Run model &amp;amp; report fit measures
# Reporting only fit statistics relevant to this demonstration
summary(hs.fit &amp;lt;- cfa(syntax, HolzingerSwineford1939, std.lv = TRUE,
                      orthogonal = TRUE), fit.measures = TRUE)

lavaan (0.5-23.1097) converged normally after  25 iterations

  Number of observations                           301

  Estimator                                         ML
  Minimum Function Test Statistic               42.291
  Degrees of freedom                                21
  P-value (Chi-square)                           0.004

Root Mean Square Error of Approximation:

  RMSEA                                          0.058
  90 Percent Confidence Interval          0.032  0.083
  P-value RMSEA &amp;lt;= 0.05                          0.276

# Chi-square is statistically significant, this test of perfect fit suggests
# the misfit between our model-implied cov matrix and sample cov matrix is
# greater than expected due to sampling variability.

# The default Chi-square test:

pchisq(q = 42.291, df = 21, ncp = 0, lower.tail = FALSE)

[1] 0.003867178

# Use formula above to calculate non-centrality parameter for test of close fit
# .0025 multiplied by model degrees of freedom by sample size - 1

(ncp.close &amp;lt;- .0025 * 21 * (301 - 1))

[1] 15.75

# Calculate Chi-square test of close fit

pchisq(q = 42.291, df = 21, ncp = ncp.close, lower.tail = FALSE)

[1] 0.2740353

# The p-value for a test of close fit is .27, close to the value reported by
# lavaan. The reason they are not closer is that lavaan does not subtract 1
# from the sample size when calculating the non-centrality parameter under
# its default settings for ML. See the final footnote below for details.

# And if we lower our standards to conduct a chi-square test of mediocre fit:
# .0064 multiplied by model degrees of freedom by sample size - 1

(ncp.med &amp;lt;- .0064 * 21 * (301 - 1))

[1] 40.32

pchisq(q = 42.291, df = 21, ncp = ncp.med, lower.tail = FALSE)

[1] 0.9199686

# If we assume mediocre misspecification in our model, the probability of
# observing our model-implied covariance matrix is 92%. Pretty good.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In closing, SEM practitioners typically report the $\chi^2$-test, but routinely expect the test to detect model misspecification, so often ignore it in practice. I hope the steps above show how one can conduct $\chi^2$-tests that assume some degree of model misspecification as the null hypothesis. I guess I hope that by doing this, we can make our $\chi^2$-tests somewhat relevant. The nice thing about the RMSEA and CI lavaan provides is that together, they may be more informative than a p-value from a $\chi^2$ test.&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;P.S.: Another approach to latent variable modeling is PLS path modeling. It is a method for SEMs based on OLS regression. It stems from the work of Hermann Wold. Wold was Joreskog&amp;rsquo;s (LISREL) advisor, Joreskog was Muthen&amp;rsquo;s (Mplus) advisor. This is why my title uses &lt;em&gt;covariance-based SEM&lt;/em&gt; instead of &lt;em&gt;latent variable models&lt;/em&gt; or just &lt;em&gt;SEMs&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;MacCallum, R. C., Browne, M. W., &amp;amp; Sugawara, H. M. (1996). Power analysis and determination of sample size for covariance structure modeling. &lt;em&gt;Psychological Methods, 1&lt;/em&gt;(2), 130–149. &lt;a href=&#34;https://doi.org/10.1037/1082-989X.1.2.130&#34; target=&#34;_blank&#34;&gt;https://doi.org/10.1037/1082-989X.1.2.130&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;I always thought mediocre meant a bad thing, it only means unexceptional, ordinary.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;I got this unoriginal idea from discussing with one of my colleagues, Menglin Xu. We were chatting around 11 pm in the office and she mentioned the non-central $\chi^2$ distribution in SEMs. Given my interest in non-central distributions in relation to &lt;a href=&#34;https://effect-size-calculator.herokuapp.com/&#34; target=&#34;_blank&#34;&gt;confidence intervals for effect sizes&lt;/a&gt;, this idea came to mind.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;I found out by digging around &lt;a href=&#34;https://github.com/cran/lavaan/blob/d7bdae575dd78d5ac518e30f84ccfb57023819af/R/lav_fit_measures.R&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt; and calculating in R. I continued exploring and noticed lavaan using $N$ only happens with ML estimation. If you try WLSMV estimation, lavaan uses $N-1$; and I got very confused on noticing this and emailed one of my factor analysis professors, Paul De Boeck. He replied in an email mentioning Wishart, bias correction and the lavaan manual. From the lavaan manual, lavaan&amp;rsquo;s default for ML estimation is something it refers to as the &lt;em&gt;normal likelihood approach&lt;/em&gt;. When it does this, it uses $N$. If you change it to the &lt;em&gt;wishart likelihood approach&lt;/em&gt; by specifying &lt;code&gt;likelihood = &amp;quot;wishart&amp;quot;&lt;/code&gt; within the &lt;code&gt;sem()&lt;/code&gt;, &lt;code&gt;cfa()&lt;/code&gt; or &lt;code&gt;lavaan()&lt;/code&gt; functions, it then uses $N-1$. This is only relevant for ML estimation. For other estimation methods, it&amp;rsquo;s $N-1$. I spent a few hours learning about the problem then trying to figure out what was going on, and I got an email reply within minutes of emailing my professor :). &lt;a href=&#34;http://lavaan.ugent.be/tutorial/est.html&#34; target=&#34;_blank&#34;&gt;From the lavaan website on Wishart versus Normal&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Misspecification and fit indices in covariance-based SEM</title>
      <link>https://www.jamesuanhoro.com/post/testing-covariance-based-sems/</link>
      <pubDate>Sat, 28 Oct 2017 10:00:00 +0000</pubDate>
      
      <guid>https://www.jamesuanhoro.com/post/testing-covariance-based-sems/</guid>
      <description>

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;If you have good measurement quality, conventional benchmarks for fit indices may lead to bad decisions. Additionally, global fit indices are not informative for investigating misspecification.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;I am working with one of my professors, &lt;a href=&#34;http://statsineducation.tumblr.com/&#34; target=&#34;_blank&#34;&gt;Dr. Jessica Logan&lt;/a&gt;, on a checklist for the developmental progress of young children. We intend to take this down the IRT route (or ordinal logistic regression), but currently, this is all part of a factor analysis course project. So I ran some CFA models, and was discussing model fit with Dr. Logan. I commented that factor loadings were generally high (1st quartile = .80, M/Mdn = .84), but initial model fit was inadequate to play the model fit game, for example, RMSEA &amp;gt; .06, &amp;hellip; She commented that she was not so worried by this combination: high loadings together with failure to meet conventional model fit guidelines. And pointed me towards a recent paper by Dan McNeish, Ji An and Gregory Hancock,&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; hereafter &lt;em&gt;MAH&lt;/em&gt;, - the paper is available on &lt;a href=&#34;https://www.researchgate.net/publication/311536084_The_Thorny_Relation_between_Measurement_Quality_and_Fit_Index_Cut-Offs_in_Latent_Variable_Models&#34; target=&#34;_blank&#34;&gt;ResearchGate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;MAH&amp;rsquo;s argument hinges on an important point: all models are usually misspecified in practice. Counterintuitively, holding misspecification constant, models with lower factor loadings (or poorer measurement quality) have better fit indices than models with higher factor loadings. For example, if two models have the same level of misspecification, and one with factor loadings of .9 could have RMSEA higher than .2, and a model with factor loadings of .4 could have RMSEA less than .05. The paper contains some charts that communicate these results very clearly.&lt;/p&gt;

&lt;p&gt;And this is why in their conclusion, MAH write:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By comparison, if one is researching a construct for which very high measurement quality can be obtained, one need not subscribe to such stringent AFI criteria to be confident that the model features any nontrivial misspecifications. Conversely, if one is researching a construct that cannot be measured very reliably, the currently employed cutoffs are not suitable and would be very likely to overlook potentially meaningful misspecifications in the model.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;AFIs&lt;/code&gt; are approximate goodness of fit indices, these include absolute fit indices like the RMSEA and SRMR, and relative fit indices like CFI.&lt;/p&gt;

&lt;h3 id=&#34;an-alternative-to-working-with-global-fit-indices&#34;&gt;An alternative to working with global fit indices&lt;/h3&gt;

&lt;p&gt;The fit indices MAH write about are global fit indices (hereafter GFIs) and they detect all types of model misspecifications. However, as MAH point out, not all model misspecifications are problematic. Consider order effects, two items may have correlated errors independent of their shared factor simply because one follows the other (serial correlation). The absence of this correlated error in a CFA (the default) would negatively impact any global fit index. Moreover, global fit indices do not tell you what your model misspecifications are.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The sections that follow may include details that not everyone would like to read about, you can skip to the &lt;a href=&#34;#lavaan&#34;&gt;bottom of the page for annotated lavaan code&lt;/a&gt; for what to do instead of using global fit indices.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;MAH reference a 2009 paper by Satis, Satorra and van der Veld,&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; hereafter &lt;em&gt;SSV&lt;/em&gt;, that addresses this issue. SSV laid out a method for investigating model misspecifications that involves the use of modification indices (MI), expected parameter change (EPC), theory and power analysis. The EPC is the value by which a constrained relationship would change from zero if it was freed to be estimated by the model. I believe researchers are familiar with MIs and often use them to fix model misspecifications with the aim of obtaining GFIs that their reviewers will accept. The relationship between MI and EPC is:&lt;/p&gt;

&lt;p&gt;$MI = (EPC/\sigma)^2$&lt;/p&gt;

&lt;p&gt;where $\sigma$ is the standard error of the EPC.&lt;/p&gt;

&lt;p&gt;SSV suggest the following framework:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;specify an unacceptable level of model misspecification $(\delta)$ for any constrained relationship in your model. They recommend thinking about your context, or:

&lt;ul&gt;
&lt;li&gt;for factor loadings, absolute value &amp;gt; .4&lt;/li&gt;
&lt;li&gt;for correlated errors, absolute value &amp;gt; .1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;calculate a noncentrality parameter, $ncp=(\delta/\sigma)^2$&lt;/li&gt;
&lt;li&gt;this $ncp$ follows a noncental-$\chi^2$ distribution which you can use to calculate the statistical power to detect $\delta$, the unnaceptable degree of model misspecification, for each constrained relationship.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div id=&#34;lavaan&#34;&gt;&lt;/p&gt;

&lt;p&gt;Next, the following decision rules:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.jamesuanhoro.com/img/posts/gfis/dec_rules.png&#34; alt=&#34;Decision rules&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The nice thing is this is all implemented in &lt;code&gt;lavaan&lt;/code&gt; in R. Misspecification codes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Model misspecification: &lt;code&gt;(m)&lt;/code&gt;, &lt;code&gt;(EPC:m)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;No model misspecification: &lt;code&gt;(nm)&lt;/code&gt;, &lt;code&gt;(EPC:nm)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Inconclusive on model misspecification: &lt;code&gt;(i)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(lavaan)
# For this, I&#39;ll assume HolzingerSwineford1939 data are 9 questions, and the
# respondents answered them x1 to x9 sequentially
data(&amp;quot;HolzingerSwineford1939&amp;quot;)
# model syntax for HolzingerSwineford1939 dataset
(syntax &amp;lt;- paste(
  paste(&amp;quot;f1 =~&amp;quot;, paste0(&amp;quot;x&amp;quot;, 1:3, collapse = &amp;quot; + &amp;quot;)),
  paste(&amp;quot;f2 =~&amp;quot;, paste0(&amp;quot;x&amp;quot;, 4:6, collapse = &amp;quot; + &amp;quot;)),
  paste(&amp;quot;f3 =~&amp;quot;, paste0(&amp;quot;x&amp;quot;, 7:9, collapse = &amp;quot; + &amp;quot;)),
  sep = &amp;quot;\n&amp;quot;))

[1] &amp;quot;f1 =~ x1 + x2 + x3\nf2 =~ x4 + x5 + x6\nf3 =~ x7 + x8 + x9&amp;quot;

# Run model, standardize latent variables, &amp;amp; report standardized results
summary(hs.fit &amp;lt;- cfa(syntax, HolzingerSwineford1939, std.lv = TRUE),
        standardize = TRUE)

lavaan (0.5-23.1097) converged normally after  22 iterations

  Number of observations                           301

  Estimator                                         ML
  Minimum Function Test Statistic               85.306
  Degrees of freedom                                24
  P-value (Chi-square)                           0.000

Parameter Estimates:

  Information                                 Expected
  Standard Errors                             Standard

Latent Variables:
                   Estimate  Std.Err  z-value  P(&amp;gt;|z|)   Std.lv  Std.all
  f1 =~                                                                 
    x1                0.900    0.081   11.127    0.000    0.900    0.772
    x2                0.498    0.077    6.429    0.000    0.498    0.424
    x3                0.656    0.074    8.817    0.000    0.656    0.581
  f2 =~                                                                 
    x4                0.990    0.057   17.474    0.000    0.990    0.852
    x5                1.102    0.063   17.576    0.000    1.102    0.855
    x6                0.917    0.054   17.082    0.000    0.917    0.838
  f3 =~                                                                 
    x7                0.619    0.070    8.903    0.000    0.619    0.570
    x8                0.731    0.066   11.090    0.000    0.731    0.723
    x9                0.670    0.065   10.305    0.000    0.670    0.665

Covariances:
                   Estimate  Std.Err  z-value  P(&amp;gt;|z|)   Std.lv  Std.all
  f1 ~~                                                                 
    f2                0.459    0.064    7.189    0.000    0.459    0.459
    f3                0.471    0.073    6.461    0.000    0.471    0.471
  f2 ~~                                                                 
    f3                0.283    0.069    4.117    0.000    0.283    0.283

Variances:
                   Estimate  Std.Err  z-value  P(&amp;gt;|z|)   Std.lv  Std.all
   .x1                0.549    0.114    4.833    0.000    0.549    0.404
   .x2                1.134    0.102   11.146    0.000    1.134    0.821
   .x3                0.844    0.091    9.317    0.000    0.844    0.662
   .x4                0.371    0.048    7.778    0.000    0.371    0.275
   .x5                0.446    0.058    7.642    0.000    0.446    0.269
   .x6                0.356    0.043    8.277    0.000    0.356    0.298
   .x7                0.799    0.081    9.823    0.000    0.799    0.676
   .x8                0.488    0.074    6.573    0.000    0.488    0.477
   .x9                0.566    0.071    8.003    0.000    0.566    0.558
    f1                1.000                               1.000    1.000
    f2                1.000                               1.000    1.000
    f3                1.000                               1.000    1.000

# Chi-square is statistically significant, there is at least some misfit

# Request modification indices. Sort them from highest to lowest
# Do not print any MI below 3 for convenience of presentation
# Apply SSV method by requesting power = TRUE, and setting delta.
# delta for those who skipped is unacceptable level of misfit, so a delta = .4
# standard for factor loadings means I care about the factor loading if it is
# missing from my model and its factor loading is greater than .4
# By default, delta = .1 in lavaan. Based on SSV&#39;s recommendations, this is
# adequate for correlated errors. So I select only correlated errors for output
# using op = &amp;quot;~~&amp;quot;
modificationindices(hs.fit, sort. = TRUE, minimum.value = 3, power = TRUE,
                    op = &amp;quot;~~&amp;quot;)


lhs op rhs        mi    epc sepc.all delta   ncp power decision
30  f1 =~  x9 36.411  0.519    0.515   0.1 1.351 0.213  **(m)**
76  x7 ~~  x8 34.145  0.536    0.488   0.1 1.187 0.193  **(m)**
28  f1 =~  x7 18.631 -0.380   -0.349   0.1 1.294 0.206  **(m)**
78  x8 ~~  x9 14.946 -0.423   -0.415   0.1 0.835 0.150  **(m)**
33  f2 =~  x3  9.151 -0.269   -0.238   0.1 1.266 0.203  **(m)**
55  x2 ~~  x7  8.918 -0.183   -0.143   0.1 2.671 0.373  **(m)**
31  f2 =~  x1  8.903  0.347    0.297   0.1 0.741 0.138  **(m)**
51  x2 ~~  x3  8.532  0.218    0.164   0.1 1.791 0.268  **(m)**
59  x3 ~~  x5  7.858 -0.130   -0.089   0.1 4.643 0.577  **(m)**
26  f1 =~  x5  7.441 -0.189   -0.147   0.1 2.087 0.303  **(m)**
50  x1 ~~  x9  7.335  0.138    0.117   0.1 3.858 0.502  **(m)**
65  x4 ~~  x6  6.221 -0.235   -0.185   0.1 1.128 0.186  **(m)**
66  x4 ~~  x7  5.920  0.098    0.078   0.1 6.141 0.698  **(m)**
48  x1 ~~  x7  5.420 -0.129   -0.102   0.1 3.251 0.438  **(m)**
77  x7 ~~  x9  5.183 -0.187   -0.170   0.1 1.487 0.230  **(m)**
36  f2 =~  x9  4.796  0.137    0.136   0.1 2.557 0.359  **(m)**
29  f1 =~  x8  4.295 -0.189   -0.187   0.1 1.199 0.195  **(m)**
63  x3 ~~  x9  4.126  0.102    0.089   0.1 3.993 0.515  **(m)**
67  x4 ~~  x8  3.805 -0.069   -0.059   0.1 7.975 0.806     (nm)
43  x1 ~~  x2  3.606 -0.184   -0.134   0.1 1.068 0.178      (i)
45  x1 ~~  x4  3.554  0.078    0.058   0.1 5.797 0.673      (i)
35  f2 =~  x8  3.359 -0.120   -0.118   0.1 2.351 0.335      (i)

# Check the decision column
# x7 and x8 is termed misspecification because power is low at .193, yet the MI
# is statistically significant. However, this may simply be due to order
# effects, and such misspecification can be acceptable. I will not add this
# correlated error to my model. Same goes for x8 and x9 (lhs 78) and x2 and x3
# (lhs 51). These missing serial-correlations are acceptable misspecifications.

# However consider x2 and x7 (lhs 55), low power at .373 yet significant MI.
# Is there some theory connecting these two items? Can I explain the
# suggested correlation?

# Consider x4 and x8 (lhs 67), high power at .806, yet the MI is not
# statistically significant, hence we can conclude there is no misspecification.

# Consider x1 and x4 (lhs 45), low power at .673, and the MI is not
# statistically significant, hence this is inconclusive.

# Now for the factor loadings
modificationindices(hs.fit, sort. = TRUE, power = TRUE, delta = .4, op = &amp;quot;=~&amp;quot;)

lhs op rhs        mi    epc sepc.all delta    ncp power decision
30  f1 =~  x9 36.411  0.519    0.515   0.4 21.620 0.996  *epc:m*
28  f1 =~  x7 18.631 -0.380   -0.349   0.4 20.696 0.995   epc:nm
33  f2 =~  x3  9.151 -0.269   -0.238   0.4 20.258 0.994   epc:nm
31  f2 =~  x1  8.903  0.347    0.297   0.4 11.849 0.931   epc:nm
26  f1 =~  x5  7.441 -0.189   -0.147   0.4 33.388 1.000   epc:nm
36  f2 =~  x9  4.796  0.137    0.136   0.4 40.904 1.000   epc:nm
29  f1 =~  x8  4.295 -0.189   -0.187   0.4 19.178 0.992   epc:nm
35  f2 =~  x8  3.359 -0.120   -0.118   0.4 37.614 1.000     (nm)
27  f1 =~  x6  2.843  0.100    0.092   0.4 45.280 1.000     (nm)
38  f3 =~  x2  1.580 -0.123   -0.105   0.4 16.747 0.984     (nm)
25  f1 =~  x4  1.211  0.069    0.059   0.4 40.867 1.000     (nm)
39  f3 =~  x3  0.716  0.084    0.075   0.4 16.148 0.980     (nm)
42  f3 =~  x6  0.273  0.027    0.025   0.4 58.464 1.000     (nm)
41  f3 =~  x5  0.201 -0.027   -0.021   0.4 43.345 1.000     (nm)
34  f2 =~  x7  0.098 -0.021   -0.019   0.4 36.318 1.000     (nm)
32  f2 =~  x2  0.017 -0.011   -0.010   0.4 21.870 0.997     (nm)
37  f3 =~  x1  0.014  0.015    0.013   0.4  9.700 0.876     (nm)
40  f3 =~  x4  0.003 -0.003   -0.003   0.4 52.995 1.000     (nm)


# See the first line, suggesting I load x9 on f1. The power is high, the MI is
# significant and the EPC is higher than .4 suggesting that this is some type
# of misspecification that we should pay attention to.

# However, the next line suggests I load x7 on f1. The power is high, the MI is
# significant, but the EPC is .38, less than .4, suggesting that we do not
# consider this misspecification to be high enough to warrant modifying the
# model. Same goes for a number of suggested modifications with decision epc:nm.

# Then there is a final group with high power, but the MIs are not
# statistically significant, so we can conclude there is no misspecification.

# Note that you can also tell lavaan what constitutes high power using the
# `high.power = ` argument. 75% is what SSV use and lavaan&#39;s default but you
# can be flexible.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that you make only one change to the model at a time. The EPC and MI, are calculated assuming other parameters are approximately correct, hence the way to run the steps above is to make one change, then re-request the MIs, EPC, and power from &lt;code&gt;lavaan&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I believe this is the approach recommended by SSV, and following this approach would cause one to think about the model when using MIs, while taking statistical power to detect misspecification into account. It is possible to resolve all the non-inconclusive relationships (using theory, modifications, &amp;hellip;) and be left with a model where you do not have the power to detect the remaining misspecifications (a bunch of inconclusives). This would be another reason to reduce our confidence in our final modeling results.&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;P.S.: Another approach to latent variable modeling is PLS path modeling. It is a method for SEMs based on OLS regression. It stems from the work of Hermann Wold. Wold was Joreskog&amp;rsquo;s (LISREL) advisor, Joreskog was Muthen&amp;rsquo;s (Mplus) advisor. This is why my title uses &lt;em&gt;covariance-based SEM&lt;/em&gt; instead of &lt;em&gt;latent variable models&lt;/em&gt; or just &lt;em&gt;SEMs&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;McNeish, D., An, J., &amp;amp; Hancock, G. R. (2017). The Thorny Relation Between Measurement Quality and Fit Index Cutoffs in Latent Variable Models. &lt;em&gt;Journal of Personality Assessment&lt;/em&gt;. &lt;a href=&#34;https://doi.org/10.1080/00223891.2017.1281286&#34; target=&#34;_blank&#34;&gt;https://doi.org/10.1080/00223891.2017.1281286&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;Saris, W. E., Satorra, A., &amp;amp; van der Veld, W. M. (2009). Testing Structural Equation Models or Detection of Misspecifications? &lt;em&gt;Structural Equation Modeling: A Multidisciplinary Journal, 16&lt;/em&gt;(4), 561–582. &lt;a href=&#34;https://doi.org/10.1080/10705510903203433&#34; target=&#34;_blank&#34;&gt;https://doi.org/10.1080/10705510903203433&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
